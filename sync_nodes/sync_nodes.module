<?php

// $Id$

/**
 * @file
 */

/**
 * Implementation of hook_feeds_plugins().
 */
function sync_nodes_feeds_plugins() {
  $path = drupal_get_path('module', 'sync_nodes').'/plugins';
  $info = array();
  $info['SyncNodesProcessor'] = array(
    'name' => 'Synchronized Nodes Processor',
    'description' => 'Synchronize nodes between Drupal sites.',
    'help' => 'Synchronize nodes between Drupal sites from content parsed.',
    'handler' => array(
      'parent' => 'FeedsNodeProcessor',
      'class' => 'SyncNodesProcessor',
      'file' => 'SyncNodesProcessor.inc',
      'path' => $path
    )
  );
  
  $info['SyncNodesDeleteProcessor'] = array(
    'name' => 'Synchronized Nodes Delete Processor',
    'description' => 'Delete synchronized nodes between Drupal sites.',
    'help' => 'Delete synchronized nodes between Drupal sites from content parsed.',
    'handler' => array(
      'parent' => 'FeedsNodeProcessor',
      'class' => 'SyncNodesDeleteProcessor',
      'file' => 'SyncNodesDeleteProcessor.inc',
      'path' => $path
    )
  );
      
	return $info;
}

/**
 * Transforms a guid to a valid nid
 */
function _sync_nodes_guid_to_nid($guid) {
  // Check whether this node was built on our site
  $url = url("", array('absolute' => TRUE, 'language' => ''));
  if (strpos($guid, $url) !== FALSE) {
    // The node is ours, return the nid
    $nid = str_replace($url.'node/', '', $guid);
  }
  else {
    $result = db_fetch_object(db_query("SELECT nid FROM {feeds_node_item} WHERE guid = '%s'", $guid));
    if ($result) {
      $nid = $result->nid;
    }
    else {
      $nid = 0;
    }
  }
  return $nid;
}
